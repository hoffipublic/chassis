package com.hoffi.chassis.dsl.modelgroup

import com.hoffi.chassis.shared.*
import com.hoffi.chassis.shared.dsl.DslRef
import com.hoffi.chassis.shared.shared.Tag
import com.hoffi.chassis.shared.shared.Tags
import com.squareup.kotlinpoet.KModifier
import com.squareup.kotlinpoet.TypeName
import com.squareup.kotlinpoet.asTypeName
import kotlin.reflect.KClass

interface IDslApiPropFuns {
    // ===================================================================================================================================
    // ====================   "primitive" TYP properties   ===============================================================================
    // ===================================================================================================================================
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, vararg tags: Tag) = property(name, typ, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, tags: Tags) = property(name, typ, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, typ, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, Tags.of(*tags))
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, tags: Tags) = property(name, typ, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, tags)
    fun property(name: String, typ: TYP = TYP.STRING, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, typ, immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, typ: TYP = TYP.STRING, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags = Tags.NONE) = property(name, typ, immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE, vararg tags: Tag) = property(name, typ, mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE, tags: Tags) = property(name, typ, mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, modifiers: MutableSet<KModifier> = mutableSetOf(), length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, typ, mutable, collectionType, initializer, modifiers, length, Tags.of(*tags))
    fun property(name: String, typ: TYP = TYP.STRING, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, modifiers: MutableSet<KModifier> = mutableSetOf(), length: Int = TYP.DEFAULT_INT, tags: Tags = Tags.NONE)

    // ===================================================================================================================================
    // ====================   "CLASS" propertys   ====================================================================================
    // ===================================================================================================================================
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, vararg tags: Tag) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, tags: Tags) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, Tags.of(*tags))
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, tags: Tags) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, tags)
    fun property(name: String, kclass: KClass<*>, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, kclass.asTypeName(), immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, kclass: KClass<*>, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags = Tags.NONE) = property(name, kclass.asTypeName(), immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, initializer, mutableSetOf(), length, Tags.of(*tags))
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags) = property(name, kclass.asTypeName(), mutable, COLLECTIONTYPE.NONE, initializer, mutableSetOf(), length, tags)
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, kclass.asTypeName(), mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, kclass: KClass<*>, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags) = property(name, kclass.asTypeName(), mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)

    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, vararg tags: Tag) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, tags: Tags) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, tags: Tags) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, mutableSetOf(), length, tags)
    fun property(name: String, poetType: TypeName, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, poetType, immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags = Tags.NONE) = property(name, poetType, immutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, initializer, mutableSetOf(), length, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags) = property(name, poetType, mutable, COLLECTIONTYPE.NONE, initializer, mutableSetOf(), length, tags)
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, poetType, mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags) = property(name, poetType, mutable, collectionType, Initializer.EMPTY, mutableSetOf(), TYP.DEFAULT_INT, tags)
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, modifiers: MutableSet<KModifier> = mutableSetOf(), length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, poetType, mutable, collectionType, initializer, modifiers, length, Tags.of(*tags))
    fun property(name: String, poetType: TypeName, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, modifiers: MutableSet<KModifier> = mutableSetOf(), length: Int = TYP.DEFAULT_INT, tags: Tags = Tags.NONE)

    // ===================================================================================================================================
    // ====================   Model properties   =========================================================================================
    // ===================================================================================================================================
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, vararg tags: Tag)                                = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, tags: Tags)                                      = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, length, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, tags: Tags)       = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, length, tags)
    fun property(name: String, modelSubElementRefString: String, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag)        = property(name, modelSubElementRefString, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags = Tags.NONE)  = property(name, modelSubElementRefString, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag)                        = property(name, modelSubElementRefString, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags)                              = property(name, modelSubElementRefString, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, initializer, length, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags)       = property(name, modelSubElementRefString, mutable, COLLECTIONTYPE.NONE, initializer, length, tags)
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelSubElementRefString, mutable, collectionType, initializer, length, Tags(*tags))
    fun property(name: String, modelSubElementRefString: String, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags)

    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, vararg tags: Tag)                                = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, tags: Tags)                                      = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, length,          Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, length: Int = TYP.DEFAULT_INT, tags: Tags)       = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE, Initializer.EMPTY, length,          tags)
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag)        = property(name, modelRefString, modelSubelement, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags = Tags.NONE)  = property(name, modelRefString, modelSubelement, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, vararg tags: Tag) = property(name, modelRefString, modelSubelement, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, tags: Tags)       = property(name, modelRefString, modelSubelement, mutable, collectionType,      Initializer.EMPTY, TYP.DEFAULT_INT, tags)
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE,      initializer, length, Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags)       = property(name, modelRefString, modelSubelement, mutable, COLLECTIONTYPE.NONE,      initializer, length, tags)
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelRefString, modelSubelement, mutable, collectionType,      initializer, length, Tags(*tags))
    fun property(name: String, modelRefString: String, modelSubelement: DslRef.model.MODELELEMENT, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags)


    fun property(name: String, modelSubElementRef: DslRef.IModelSubElement, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, vararg tags: Tag) = property(name, modelSubElementRef, mutable, collectionType, initializer, length, Tags(*tags))
    fun property(name: String, modelSubElementRef: DslRef.IModelSubElement, mutable: Mutable = immutable, collectionType: COLLECTIONTYPE = COLLECTIONTYPE.NONE, initializer: Initializer = Initializer.EMPTY, length: Int = TYP.DEFAULT_INT, tags: Tags = Tags.NONE)
}
